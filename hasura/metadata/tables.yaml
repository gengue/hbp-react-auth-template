- table:
    schema: auth
    name: account_providers
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: provider
    using:
      foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: roleByRole
    using:
      foreign_key_constraint_on: role
  insert_permissions:
  - role: staff
    permission:
      check: {}
      columns:
      - role
      - created_at
      - account_id
      - id
      backend_only: false
  select_permissions:
  - role: staff
    permission:
      columns:
      - id
      - created_at
      - account_id
      - role
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - role
      - created_at
      - account_id
      - id
      filter:
        account:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: staff
    permission:
      columns:
      - role
      - created_at
      - account_id
      - id
      filter: {}
      check: {}
  delete_permissions:
  - role: staff
    permission:
      filter: {}
- table:
    schema: auth
    name: accounts
  object_relationships:
  - name: role
    using:
      foreign_key_constraint_on: default_role
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_providers
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_roles
  - name: refresh_tokens
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: refresh_tokens
  insert_permissions:
  - role: staff
    permission:
      check: {}
      columns:
      - id
      - created_at
      - updated_at
      - user_id
      - active
      - email
      - new_email
      - password_hash
      - default_role
      - is_anonymous
      - custom_register_data
      - otp_secret
      - mfa_enabled
      - ticket
      - ticket_expires_at
      backend_only: false
  select_permissions:
  - role: staff
    permission:
      columns:
      - active
      - created_at
      - custom_register_data
      - default_role
      - email
      - id
      - is_anonymous
      - mfa_enabled
      - new_email
      - otp_secret
      - ticket
      - ticket_expires_at
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - active
      - created_at
      - custom_register_data
      - default_role
      - email
      - id
      - is_anonymous
      - mfa_enabled
      - new_email
      - otp_secret
      - ticket
      - ticket_expires_at
      - updated_at
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: staff
    permission:
      columns:
      - active
      - is_anonymous
      - mfa_enabled
      - email
      - new_email
      - custom_register_data
      - default_role
      - otp_secret
      - password_hash
      - created_at
      - ticket_expires_at
      - updated_at
      - id
      - ticket
      - user_id
      filter: {}
      check: {}
- table:
    schema: auth
    name: providers
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: auth_provider
        table:
          schema: auth
          name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: role
        table:
          schema: auth
          name: account_roles
  - name: accounts
    using:
      foreign_key_constraint_on:
        column: default_role
        table:
          schema: auth
          name: accounts
  select_permissions:
  - role: staff
    permission:
      columns:
      - role
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - role
      filter: {}
      allow_aggregations: true
- table:
    schema: public
    name: users
  object_relationships:
  - name: account
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: accounts
        column_mapping:
          id: user_id
  insert_permissions:
  - role: staff
    permission:
      check: {}
      columns:
      - avatar_url
      - display_name
      - created_at
      - updated_at
      - id
      backend_only: false
  select_permissions:
  - role: staff
    permission:
      columns:
      - id
      - created_at
      - updated_at
      - display_name
      - avatar_url
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - id
      - created_at
      - updated_at
      - display_name
      - avatar_url
      filter:
        id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: staff
    permission:
      columns:
      - avatar_url
      - display_name
      filter: {}
      check: {}
  - role: user
    permission:
      columns:
      - avatar_url
      - display_name
      filter:
        id:
          _eq: X-Hasura-User-Id
      check:
        id:
          _eq: X-Hasura-User-Id
